#!/bin/bash

if [ $# -lt 2 ] ; then
    echo "Usage; ./run {rsort|sol|wc|clean|grep|pv|visitor|rcount} [#iterations]"
    exit 1
fi 

APP=$1
ITERATIONS=$2
STORM_UI_SERVER=localhost:8080
METRICS_INTERVAL_SEC=30

# components
declare -a comps

case $APP in
    rsort)
        comps=("spout" "sort")
        ;;
    sol)
        comps=("spout" "bolt")        
        ;;
    wc)
        comps=("spout" "split" "count")
        ;;
    clean)
        comps=("spout" "view" "filter")
        ;;
    grep)
        comps=("spout" "find" "count")
        ;;
    pv)
        comps=("spout" "view" "count")
        ;;
    visitor)
        comps=("spout" "view" "uniquer")
        ;;
    rcount)
        comps=("spout" "split" "rolling_count")
        ;;
esac
    

wget http://${STORM_UI_SERVER}/api/v1/topology/summary

topo_id=`cat summary | jq '.topologies[].id' | tr -d '"'`
if [[ ${topo_id} == "" ]] ; then
    echo "Topology is not running. Abort."
    exit 1
fi

echo ${topo_id}
mkdir ${topo_id}
mv summary ${topo_id}

for comp in ${comps[@]}; do
    echo $comp
    wget http://${STORM_UI_SERVER}/api/v1/topology/${topo_id}/component/${comp}
    mv $comp ${topo_id}
done

./get_metrics ${topo_id}/1
for ((i=2; i <= $ITERATIONS; i++)) ; do
    sleep ${METRICS_INTERVAL_SEC}
    echo ''
    echo 'Waiting for the next metrics sampling...'
    ./get_metrics ${topo_id}/$i
done

echo ''
echo 'All done!'

    
