#!/bin/bash

# apps=(rsort sol wc clean grep pv visitor rcount vhtree)
# vms=(1 2 4 8)
apps=(sol rsort)
vms=(1 2 3 4 5 6 7 8 12 16 24 32 48 64 80 96 128)

source ./benchlib

dbg_print 'Start benchmarking!!'

for ((i = 0; i < ${#apps[@]}; i++)) ; do
    dbg_print "######## Start benchmarking ${apps[$i]} ########"

    for ((j = 0; j < ${#vms[@]}; j++)) ; do
        create_hosts_file ${vms[$j]}
        # dbg_print "Copying ${HOSTS_FILE} file to participating hosts..."
        # run_cmd "pscp -l ${REMOTE_USER} -h ${HOSTS_FILE} ${HOSTS_FILE} ${REMOTE_DIR}"

        create_tcpdump_filter ${vms[$j]}
        dbg_print "Copying ${TCPDUMP_FILTER} to ${TCPDUMP_HOST}..."
        scp ${TCPDUMP_FILTER} ${REMOTE_USER}@${TCPDUMP_HOST}:${REMOTE_DIR}

		run_supervisors ${vms[$j]}
        dbg_print "Post run supervisors wait: ${POST_RUN_SUPERVISOR_WAIT_SEC} seconds"
		sleep ${POST_RUN_SUPERVISOR_WAIT_SEC}

		test_results=()
		run_test ${apps[$i]} ${vms[$j]}

		kill_supervisors

        if [ $i -eq $((${#apps[@]} - 1)) ] && [ $j -eq $((${#vm[@]} - 1)) ] ; then
            break
        fi

        dbg_print "Post kill supervisors wait: ${POST_KILL_SUPERVISOR_WAIT_SEC} seconds"
		sleep ${POST_KILL_SUPERVISOR_WAIT_SEC}
        dbg_print "######## Done benchmarking ${apps[$i]} ########"
	done
    
    results_file=${OUTPUT_DIR}/${apps[$i]}/results-`get_date_sec`
    cat `find ${OUTPUT_DIR}/${apps[$i]} -name results` > ${results_file}
    dbg_print "Emailing results for ${apps[$i]}..."
    mail -s "[Storm-bench] Finished ${apps[$i]} !!" ${EMAIL_NOTIFICATION_ADDRESS} < ${results_file}
done

dbg_print "Stopping Kafka..."
stop_kafka
sleep 3

dbg_print "Stopping Storm..."
sudo pkill java # stop all the java processes including storm nimbus and ui
sleep 3

dbg_print "Stopping ZooKeeper..."
stop_zkserver
sleep 3

dbg_print "Stopping All Running EC2 instances..."
stop_instances >& /dev/null

dbg_print 'All done!'


